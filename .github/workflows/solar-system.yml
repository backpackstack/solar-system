name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env: 
    MONGO_URI: 'mongodb://localhost:27017/superData'
    MONGO_USERNAME: non-prod-user
    MONGO_PASSWORD: non-prod-password
    DOCKER_TAG: ${{ github.sha }}

jobs:
    unit-testing:
        name: Unit Testing
        services:
          mongodb: 
            image: siddharth67/mongo-db:non-prod
            ports:
              - 27017:27017
        strategy:
          matrix:
              nodejs_version: [18] #, 20]
              operating_system: [ubuntu-latest] #, macos-latest]
              exclude:
                  - nodejs_version: 18
                    operating_system: macos-latest
        runs-on: ${{matrix.operating_system}}
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - ${{matrix.nodejs_version}}
          uses: actions/setup-node@v3
          with:
            node-version: ${{matrix.nodejs_version}}
    
        - name: Cache NPM Dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          id: NodeJS-unit-testing-step
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage: 
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - 18
          uses: actions/setup-node@v3
          with:
            node-version: 18
        
        - name: Cache NPM Dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

        - name: Install Dependencies
          run: npm install

        - name: Check Code Coverage
          continue-on-error: true
          run: npm run coverage

        - name: Archive Test Result
          uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5 

    docker: 
        name: Containerization
        needs: [unit-testing, code-coverage]
        permissions: 
           packages: write
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repo
          uses: actions/checkout@v4

        - name: GHCR Login
          uses: docker/login-action@v3.3.0
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Docker Login
          uses: docker/login-action@v3.3.0
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

        - name: Docker Build for testing
          uses: docker/build-push-action@v6
          with:
            context: .
            push: false
            tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

        - name: Docker Image Testing
          run: |
            docker images
            docker run --name solar-system-app -d  \
            docker pull $DOCKERHUB_USERNAME/solar-system:$DOCKER_TAG \
                -p 3000:3000 \
                -e MONGO_URI=$MONGO_URI \
                -e MONGO_USERNAME=$MONGO_USERNAME \
                -e MONGO_PASSWORD=$MONGO_PASSWORD \
                $DOCKERHUB_USERNAME/solar-system:$DOCKER_TAG
            
            IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app || echo "none")
            if [ "$IP" == "none" ] || [ -z "$IP" ]; then
                echo "Error: Unable to retrieve container IP address."
                docker logs solar-system-app
                exit 1
            fi
            echo "Container IP: $IP"

            # echo "Testing Image URL using wget"
            # wget -q -O - http://127.0.0.1:3000/live | grep "live"
            # if [ $? -ne 0 ]; then
            #     echo "Error: Health check failed. Application is not responding as expected."
            #     docker logs solar-system-app
            #     exit 1
            # fi
            # echo "Health check passed."


        - name: Container Registry Push
          uses: docker/build-push-action@v6
          with:
            context: .
            push: true
            tags: |            
                ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
                ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}
